apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  entrypoint: |
    #!/bin/bash
    set -xe

    # Install Docker and Compose
    # apk add docker
    # apk add py-pip
    # apk add openrc --no-cache
    # pip install docker-compose
    # rc-update add docker boot
    # service docker start &
    #
    # echo $(docker version)
    # echo $(docker-compose --version)
    # docker info
    # docker ps -a

    cp /scripts/config.toml /etc/gitlab-runner/

    # Register the runner
    export CI_SERVER_URL=https://gitlab.com/ci
    # export RUNNER_NAME=my-runner
    # export REGISTRATION_TOKEN=my-registration-token
    # export REGISTER_NON_INTERACTIVE=true

    /entrypoint register --non-interactive \
      --url $GITLAB_URL \
      --executor docker \
      --registration-token f31QPRizyLSXj2AuH6oM \
      --docker-volumes /var/run/docker.sock:/var/run/docker.sock \
      --docker-privileged \
      --docker-image 'docker:dind' \
      --description "docker-compose runner" \
      --debug


    # Remove old runners
    /entrypoint verify --delete

    # Start the runner
    /entrypoint run --user=gitlab-runner \
      --working-directory=/home/gitlab-runner
  config.toml: |
    concurrent = {{ .Values.concurrent }}
    check_interval = {{ .Values.checkInterval }}
    [[runners]]
      name = "Kubernetes Runner"
      url = "https://gitlab.com/ci"
      token = "f31QPRizyLSXj2AuH6oM"
      executor = "shell"
      [runners.docker]
        privileged = true
        disable_cache = false
        volumes = ["/var/run/docker.sock:/var/run/docker.sock"]
